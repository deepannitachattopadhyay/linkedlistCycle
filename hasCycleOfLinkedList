public class LinkedlistCyle {
    public static boolean hasCycle(Node head){
        if(head==null||head.next==null){
            return false;
        }
        Node slow=head;
        Node fast=head;
        while(fast!=null && fast.next!=null ){
            slow=slow.next;
            fast=fast.next.next;//before jumping two steps check if fast.next.next exist or not
            if(fast==slow){
                return true;
            }
        }
        return false;
    }
    public static class Node{
        int data;
        Node next;
        Node(int data){
            this.data=data;
        }
    }
    public static void main(String[] args){
        Node a= new Node(10);
     Node b = new Node(20);
      Node c = new Node(30);
      Node d = new Node(40);
      Node e = new Node(50);
      Node f = new Node(60);
       a.next=b;
       b.next=c;
       c.next=d;
       d.next=e;
       e.next=f;
       f.next=b;
       hasCycle(a);
       System.out.println(hasCycle(a));


    

        }    
     }



       

    


